const roles = {
  'Bronce V ðŸ¥‰': 0,
  'Bronce IV ðŸ¥‰': 2,
  'Bronce III ðŸ¥‰': 4,
  'Bronce II ðŸ¥‰': 6,
  'Bronce I ðŸ¥‰': 8,
  'Plata V âšª': 10,
  'Plata IV âšª': 12,
  'Plata III âšª': 14,
  'Plata II âšª': 16,
  'Plata I âšª': 18,
  'Oro V ðŸŸ¡': 20,
  'Oro IV ðŸŸ¡': 22,
  'Oro III ðŸŸ¡': 24,
  'Oro II ðŸŸ¡': 26,
  'Oro I ðŸŸ¡': 28,
  'Platino V ðŸ”·': 30,
  'Platino IV ðŸ”·': 32,
  'Platino III ðŸ”·': 34,
  'Platino II ðŸ”·': 36,
  'Platino I ðŸ”·': 38,
  'Diamante V ðŸ’Ž': 40,
  'Diamante IV ðŸ’Ž': 42,
  'Diamante III ðŸ’Ž': 44,
  'Diamante II ðŸ’Ž': 46,
  'Diamante I ðŸ’Ž': 48,
  'Heroico V ðŸ¦¸': 50,
  'Heroico IV ðŸ¦¸': 52,
  'Heroico III ðŸ¦¸': 54,
  'Heroico II ðŸ¦¸': 56,
  'Heroico I ðŸ¦¸': 58,
  'Gran Maestro V ðŸ‘‘': 60,
  'Gran Maestro IV ðŸ‘‘': 62,
  'Gran Maestro III ðŸ‘‘': 64,
  'Gran Maestro II ðŸ‘‘': 66,
  'Gran Maestro I ðŸ‘‘': 68,
  'Leyenda ðŸ”¥': 70,
}

let handler = m => m
handler.before = async function (m, { conn }) {
  let user = db.data.users[m.sender]
  let level = user.level || 0
  // Ordena de mayor a menor el nivel y busca el rango que corresponda
  let rango = (Object.entries(roles)
    .sort((a, b) => b[1] - a[1])
    .find(([, minLevel]) => level >= minLevel) || Object.entries(roles)[0])[0]
  user.rango = rango
  return true
}

export default handler