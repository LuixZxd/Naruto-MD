let handler = async (m, { conn, args, participants }) => {
  let users = Object.entries(global.db.data.users).map(([jid, value]) => ({
    jid,
    dinero: value.dinero || 0,
    banco: value.banco || 0,
  }));

  // Ordenar descendente por dinero + banco
  users.sort((a, b) => (b.dinero + b.banco) - (a.dinero + a.banco));

  // Cantidad a mostrar: mínimo 10, máximo lo que pida el usuario o 10
  let len = args[0] ? Math.min(10, Math.max(parseInt(args[0]), 10)) : Math.min(10, users.length);

  let text = `「⭐」Los usuarios con más *¥${global.moneda || '¥'}* son:\n\n`;

  for (let i = 0; i < len; i++) {
    let user = users[i];
    if (!user) break;

    // No se obtiene nombre real, solo muestra el JID sin el @ y dominio
    let jidShort = user.jid.split('@')[0];
    let total = user.dinero + user.banco;

    text += `✰ ${i + 1} » *${jidShort}*\n\tTotal→ *¥${total}*\n\n`;
  }

  await conn.reply(m.chat, text.trim(), m);
};

handler.help = ['baltop'];
handler.tags = ['rpg'];
handler.command = ['baltop', 'eboard'];
handler.group = false;
handler.register = true;
handler.fail = null;
handler.exp = 0;

export default handler;