function calcularNivel(exp) {
  return Math.floor(Math.sqrt(exp) / 10);
}

function xpParaNivel(nivel) {
  return Math.pow(nivel * 10, 2);
}

let handler = async (m, { conn }) => {
  let user = global.db.data.users[m.sender];
  if (!user) {
    user = global.db.data.users[m.sender] = {
      name: await conn.getName(m.sender),
      dinero: 0,
      exp: 0,
      diamond: 0,
      moneda: '¬•',
      level: 0,
      registered: false,
      rango: '‚≠ë Bronce V ‚≠ë'
    };
  }

  if (!user.registered) {
    const nombre = user.name || await conn.getName(m.sender);
    return m.reply(`üî∞ No est√°s registrado a√∫n.\n‚û§ Usa: *.reg ${nombre}.18*`);
  }

  const nivelActual = calcularNivel(user.exp || 0);
  user.level = nivelActual;
  user.rango = obtenerRango(nivelActual);

  const xpActual = user.exp || 0;
  const xpNivelSiguiente = xpParaNivel(nivelActual + 1);
  const xpParaSubir = xpNivelSiguiente - xpActual;

  const nombre = user.name || await conn.getName(m.sender);
  const avatar = await conn.profilePictureUrl(m.sender, 'image').catch(() => 'https://files.catbox.moe/xr2m6u.jpg');
  const backgroundURL = encodeURIComponent('https://i.ibb.co/2jMjYXK/IMG-20250103-WA0469.jpg');
  const avatarURL = encodeURIComponent(avatar);

  const imageAPI = `https://api.siputzx.my.id/api/canvas/profile?backgroundURL=${backgroundURL}&avatarURL=${avatarURL}&rankName=${encodeURIComponent(user.rango)}&rankId=0&exp=${xpActual}&requireExp=0&level=${nivelActual}&name=${encodeURIComponent(nombre)}`;

  const textoPerfil = `
‚úø Perfil de usuario *${nombre}* ‚úø

${user.moneda || '¬•'} : *${(user.dinero || 0).toLocaleString()}*
‚ú® *Exp:* *${xpActual.toLocaleString()} XP*
‚≠ê *Nivel:* *${nivelActual}* (XP para subir: *${xpParaSubir.toLocaleString()}*)
üíé *Diamantes:* *${(user.diamond || 0).toLocaleString()}*
‚öîÔ∏è *Rango:* ${user.rango}
`.trim();

  try {
    await conn.sendFile(m.chat, imageAPI, 'perfil.jpg', textoPerfil, m);
  } catch (e) {
    await conn.reply(m.chat, '‚ùå Error al generar el perfil.', m);
    console.error(e);
  }
};