import moment from 'moment-timezone';
import PhoneNumber from 'awesome-phonenumber';
import { createHash } from 'crypto';

// Funciones para nivel y rango (importante que est√©n definidas)
function calcularNivel(exp) {
  return Math.floor(Math.sqrt(exp) / 10);
}

const rangos = [
  { nivel: 0, rango: '‚≠ë Bronce V ‚≠ë' },
  { nivel: 2, rango: '‚≠ë Bronce IV ‚≠ë' },
  { nivel: 4, rango: '‚≠ë Bronce III ‚≠ë' },
  { nivel: 6, rango: '‚≠ë Bronce II ‚≠ë' },
  { nivel: 8, rango: '‚≠ë Bronce I ‚≠ë' },
  { nivel: 10, rango: '‚≠ë Plata V ‚≠ë' },
  { nivel: 12, rango: '‚≠ë Plata IV ‚≠ë' },
  { nivel: 14, rango: '‚≠ë Plata III ‚≠ë' },
  { nivel: 16, rango: '‚≠ë Plata II ‚≠ë' },
  { nivel: 18, rango: '‚≠ë Plata I ‚≠ë' },
  { nivel: 20, rango: '‚≠ë Oro V ‚≠ë' },
  { nivel: 25, rango: '‚≠ë Oro IV ‚≠ë' },
  { nivel: 30, rango: '‚≠ë Oro III ‚≠ë' },
  { nivel: 35, rango: '‚≠ë Oro II ‚≠ë' },
  { nivel: 40, rango: '‚≠ë Oro I ‚≠ë' },
  { nivel: 45, rango: '‚≠ë Diamante ‚≠ë' },
  { nivel: 50, rango: '‚≠ë Maestro ‚≠ë' },
  { nivel: 60, rango: '‚≠ë Gran Maestro ‚≠ë' },
  { nivel: 70, rango: '‚≠ë Leyenda ‚≠ë' }
];

function obtenerRango(nivel) {
  let rangoActual = rangos[0].rango;
  for (let i = 0; i < rangos.length; i++) {
    if (nivel >= rangos[i].nivel) rangoActual = rangos[i].rango;
    else break;
  }
  return rangoActual;
}

let handler = async (m, { conn }) => {
  let user = global.db.data.users[m.sender];
  if (!user) {
    user = global.db.data.users[m.sender] = {
      name: await conn.getName(m.sender),
      dinero: 0,
      exp: 0,
      diamond: 0,
      moneda: '¬•',
      level: 0,
      registered: false,
      rango: '‚≠ë Bronce V ‚≠ë'
    };
  }

  if (!user.registered) {
    const nombre = user.name || await conn.getName(m.sender);
    return m.reply(`üî∞ No est√°s registrado a√∫n.\n‚û§ Usa: *.reg ${nombre}.18*`);
  }

  // Calcular nivel y rango
  const nivelActual = calcularNivel(user.exp || 0);
  user.level = nivelActual;
  user.rango = obtenerRango(nivelActual);

  const nombre = user.name || await conn.getName(m.sender);
  const avatar = await conn.profilePictureUrl(m.sender, 'image').catch(() => 'https://files.catbox.moe/xr2m6u.jpg');
  const backgroundURL = encodeURIComponent('https://i.ibb.co/2jMjYXK/IMG-20250103-WA0469.jpg');
  const avatarURL = encodeURIComponent(avatar);

  const imageAPI = `https://api.siputzx.my.id/api/canvas/profile?backgroundURL=${backgroundURL}&avatarURL=${avatarURL}&rankName=${encodeURIComponent(user.rango)}&rankId=0&exp=${user.exp}&requireExp=0&level=${nivelActual}&name=${encodeURIComponent(nombre)}`;

  const textoPerfil = `
‚úø Perfil de usuario *${nombre}* ‚úø

${user.moneda || '¬•'} : *${(user.dinero || 0).toLocaleString()}*
‚ú® *Exp:* *${(user.exp || 0).toLocaleString()} XP*
‚≠ê *Nivel:* *${nivelActual}*
üíé *Diamantes:* *${(user.diamond || 0).toLocaleString()}*
‚öîÔ∏è *Rango:* ${user.rango}
`.trim();

  try {
    await conn.sendFile(m.chat, imageAPI, 'perfil.jpg', textoPerfil, m);
  } catch (e) {
    await conn.reply(m.chat, '‚ùå Error al generar el perfil.', m);
    console.error(e);
  }
};

handler.help = ['perfil'];
handler.tags = ['eco'];
handler.command = ['perfil', 'yo', 'miperfil'];
handler.register = true;

export default handler;